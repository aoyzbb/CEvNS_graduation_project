//*********************************************
//  This is auto generated by G4gen 0.6
//                                  author:Qian

#ifndef SimEvent_h
#define SimEvent_h

#include "TVector3.h"
#include "TObject.h"
#include "TMap.h"
#include "TObjString.h"
#include <map>

#include "SimTrack.h"
#include "SimDeposit.h"

class SimEvent : public TObject
{

public:
  SimEvent() { MyClear(); }
  SimEvent(const SimEvent& aEvent)
  {
    this->MyClear();
    this->fTruthEnergy = aEvent.fTruthEnergy;
    this->fTruthParticle = aEvent.fTruthParticle;
    this->fTruthPosition = aEvent.fTruthPosition;
    this->fTruthPolarization = aEvent.fTruthPolarization;
    this->fTruthMomentumDirection = aEvent.fTruthMomentumDirection;
    this->fTimeFlag = aEvent.fTimeFlag;

    Int_t TrackNumber = aEvent.TMapTracks.GetSize();
    Int_t DepositNumber = aEvent.TMapDeposits.GetSize();

    for (Int_t iT = 1; iT <= TrackNumber; ++iT)
      this->TMapTracks.Add(new TObjString(Form("%d", iT)), aEvent.TMapTracks.GetValue(Form("%d", iT)));

    for (Int_t iD = 0; iD < DepositNumber; ++iD)
      this->TMapDeposits.Add(new TObjString(Form("%d", iD)), aEvent.TMapDeposits.GetValue(Form("%d", iD)));
  }
  SimEvent &operator=(const SimEvent& aEvent)
  {
    this->MyClear();
    this->fTruthEnergy = aEvent.fTruthEnergy;
    this->fTruthParticle = aEvent.fTruthParticle;
    this->fTruthPosition = aEvent.fTruthPosition;
    this->fTruthPolarization = aEvent.fTruthPolarization;
    this->fTruthMomentumDirection = aEvent.fTruthMomentumDirection;
    this->fTimeFlag = aEvent.fTimeFlag;

    Int_t TrackNumber = aEvent.TMapTracks.GetSize();
    Int_t DepositNumber = aEvent.TMapDeposits.GetSize();

    for (Int_t iT = 1; iT <= TrackNumber; ++iT)
      this->TMapTracks.Add(new TObjString(Form("%d", iT)), aEvent.TMapTracks.GetValue(Form("%d", iT)));

    for (Int_t iD = 0; iD < DepositNumber; ++iD)
      this->TMapDeposits.Add(new TObjString(Form("%d", iD)), aEvent.TMapDeposits.GetValue(Form("%d", iD)));

    return *this;
  }
  virtual ~SimEvent() {}

  void SetTruthEnergy(Double_t TruthEnergy) { fTruthEnergy = TruthEnergy; }
  void SetTruthParticle(TString TruthParticle) { fTruthParticle = TruthParticle; }
  void SetTruthPosition(TVector3 TruthPosition) { fTruthPosition = TruthPosition; }
  void SetTruthPolarization(TVector3 TruthPolarization) { fTruthPolarization = TruthPolarization; }
  void SetTruthMomentumDirection(TVector3 TruthMomentumDirection) { fTruthMomentumDirection = TruthMomentumDirection; }
  void SetTimeFlag(Double_t TimeFlag) { fTimeFlag = TimeFlag; }

  Double_t GetTruthEnergy() const { return fTruthEnergy; }
  TString GetTruthParticle() const { return fTruthParticle; }
  TVector3 GetTruthPosition() const { return fTruthPosition; }
  TVector3 GetTruthPolarization() const { return fTruthPolarization; }
  TVector3 GetTruthMomentumDirection() const { return fTruthMomentumDirection; }
  Double_t GetTimeFlag() const { return fTimeFlag; }

public:
  inline void MyClear();
  inline void MyMapClear(TMap *);

  // SD Functions
  //________________________________
  void AddDeposit(Int_t tID, SimDeposit *aDep)
  {
    SimTrack *aTrack = GetTrack(tID);

    Int_t Ndep = TMapDeposits.GetSize();
    TMapDeposits.Add(new TObjString(Form("%d", Ndep)), aDep);

    aTrack->addDeposit(Ndep, aDep);
  }

  SimTrack *GetTrack(Int_t tID)
  {
    SimTrack *aTrack = (SimTrack *)TMapTracks.GetValue(Form("%d", tID));

    if (aTrack == 0)
    {
      aTrack = new SimTrack();
      aTrack->SetTrackID(tID);
      TMapTracks.Add(new TObjString(Form("%d", tID)), aTrack);
    }
    return aTrack;
  }

  SimDeposit *GetDeposit(Int_t tID)
  {
    SimDeposit *aDeposit = (SimDeposit *)TMapDeposits.GetValue(Form("%d", tID));
    return aDeposit;
  }

  TMap *GetTrackMap() { return &TMapTracks; }
  TMap *GetDepositMap() { return &TMapDeposits; }

private:
  // global variables
  Double_t fTruthEnergy;
  TString fTruthParticle;
  TVector3 fTruthPosition;
  TVector3 fTruthPolarization;
  TVector3 fTruthMomentumDirection;
  Double_t fTimeFlag;

  // SD variables
  TMap TMapTracks;
  TMap TMapDeposits;

  ClassDef(SimEvent, 1)
};

inline void SimEvent::MyClear()
{
  fTruthEnergy = 0.;
  fTruthParticle = "";
  fTruthPosition = TVector3(0., 0., 0.);
  fTruthPolarization = TVector3(0., 0., 1.);
  fTruthMomentumDirection = TVector3(0., 0., 0.);
  fTimeFlag = 0.;

  MyMapClear(&TMapTracks);
  MyMapClear(&TMapDeposits);

  this->Clear();
}

inline void SimEvent::MyMapClear(TMap *mp)
{
  TIterator *it = mp->MakeIterator();
  TObject *tempObj = 0;
  while ((tempObj = it->Next()))
  {
    TObjString *obj = dynamic_cast<TObjString *>(tempObj);
    SimTrack *trk = dynamic_cast<SimTrack *>(mp->GetValue(obj));
    SimDeposit *dep = dynamic_cast<SimDeposit *>(mp->GetValue(obj));
    if (trk != NULL)
      trk->Delete();
    if (dep != NULL)
      dep->Delete();
  }
  mp->Delete();
}

#endif

